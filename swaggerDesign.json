{
  "openapi": "3.0.0",
  "info": {
    "title": "Pokémon Singles Inventory and User Management API",
    "version": "1.0.0",
    "description": "API to track inventory of Pokémon singles and manage user accounts"
  },
  "servers": [
    {
      "url": "https://cse341-project-og9x.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Pokemon",
      "description": "API to manage Pokémon singles inventory"
    },
    {
      "name": "User",
      "description": "API to manage user accounts"
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/users/{id}": {
      "put": {
        "summary": "Update user information",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/google": {
      "get": {
        "summary": "Initiate Google OAuth authentication",
        "tags": ["User"],
        "description": "Redirects the user to Google's OAuth login page.",
        "responses": {
          "302": {
            "description": "Redirect to Google login"
          }
        },
        "security": [
          {
            "GoogleOAuth": []
          }
        ]
      }
    },
    "/api/users/google/callback": {
      "get": {
        "summary": "Callback route after Google OAuth authentication",
        "tags": ["User"],
        "description": "Handles the callback from Google OAuth and returns a JWT token.",
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication successful"
                    },
                    "token": {
                      "type": "string",
                      "example": "your-jwt-token-here"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          }
        },
        "security": [
          {
            "GoogleOAuth": []
          }
        ]
      }
    },
    "/api/pokemon": {
      "get": {
        "summary": "Get all Pokémon cards in inventory",
        "tags": ["Pokemon"],
        "responses": {
          "200": {
            "description": "List of Pokémon cards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PokemonCard"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new Pokémon card to inventory",
        "tags": ["Pokemon"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PokemonCardCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pokémon card added"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "user-id" },
          "username": { "type": "string", "example": "john_doe" },
          "email": { "type": "string", "example": "john.doe@example.com" }
        }
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "example": "john_doe" },
          "email": { "type": "string", "example": "john.doe@example.com" },
          "password": { "type": "string", "example": "Password123!" }
        },
        "required": ["username", "email", "password"]
      },
      "PokemonCard": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "pokemon-card-id" },
          "name": { "type": "string", "example": "Pikachu" },
          "type": { "type": "string", "example": "Electric" },
          "rarity": { "type": "string", "example": "Rare" }
        }
      },
      "PokemonCardCreate": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Pikachu" },
          "type": { "type": "string", "example": "Electric" },
          "rarity": { "type": "string", "example": "Rare" }
        },
        "required": ["name", "type", "rarity"]
      }
    },
    "securitySchemes": {
      "GoogleOAuth": {
        "type": "oauth2",
        "description": "Google OAuth 2.0 authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
            "tokenUrl": "https://oauth2.googleapis.com/token",
            "scopes": {
              "openid": "Authenticate using Google",
              "profile": "Access user's profile information",
              "email": "Access user's email address"
            }
          }
        }
      }
    }
  }
}
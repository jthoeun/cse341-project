{
  "openapi": "3.0.0",
  "info": {
    "title": "Pokémon Singles Inventory and User Management API",
    "version": "1.0.0",
    "description": "API to track inventory of Pokémon singles and manage user accounts"
  },
  "servers": [
    {
      "url": "https://cse341-project-og9x.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "API for user authentication and OAuth login"
    },
    {
      "name": "Pokemon",
      "description": "API to manage Pokémon singles inventory"
    },
    {
      "name": "User",
      "description": "API to manage user accounts"
    }
  ],
  "paths": {
    "/auth/google": {
      "get": {
        "summary": "Google OAuth Login",
        "tags": ["Auth"],
        "description": "Redirects to Google OAuth login page. Use this endpoint to sign in with your Google account. Will require to copy & past request URL and log in to google using a .byui.edu email",
        "responses": {
          "302": {
            "description": "Redirects to Google OAuth page"
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "summary": "Google OAuth Callback",
        "tags": ["Auth"],
        "description": "Handles the callback from Google OAuth and redirects the user to the application. (call back with token is shown after login. copy and paste token to the Authorize button",
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication successful"
                    },
                    "token": {
                      "type": "string",
                      "example": "your-generated-jwt-token-here"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "user-id"
                        },
                        "username": {
                          "type": "string",
                          "example": "user-name"
                        },
                        "email": {
                          "type": "string",
                          "example": "user-email"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "summary": "Logout and invalidate JWT token",
        "tags": ["Auth"],
        "description": "Logs out the current user and invalidates the JWT token.",
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/users/{username}": {
      "get": {
        "summary": "Get user by username",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Username of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user by username",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user by username",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/pokemon": {
      "get": {
        "summary": "Get all Pokémon singles",
        "tags": ["Pokemon"],
        "responses": {
          "200": {
            "description": "List of all Pokémon singles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PokemonCard"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new Pokémon single",
        "tags": ["Pokemon"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PokemonCardCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pokémon single added successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/api/pokemon/{id}": {
      "get": {
        "summary": "Get Pokémon single by ID",
        "tags": ["Pokemon"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the Pokémon single to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Pokémon single details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PokemonCard"
                }
              }
            }
          },
          "404": {
            "description": "Pokémon single not found"
          }
        }
      },
      "put": {
        "summary": "Update Pokémon single",
        "tags": ["Pokemon"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PokemonCardUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pokémon single updated successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Pokémon single not found"
          }
        }
      },
      "delete": {
        "summary": "Delete Pokémon single",
        "tags": ["Pokemon"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pokémon single deleted successfully"
          },
          "404": {
            "description": "Pokémon single not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "user-id"
          },
          "username": {
            "type": "string",
            "example": "jtgamer"
          },
          "email": {
            "type": "string",
            "example": "admin@test.com"
          },
          "accountType": {
            "type": "string",
            "example": "admin"
          }
        }
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "jtgamer"
          },
          "password": {
            "type": "string",
            "example": "password123!"
          },
          "displayName": {
            "type": "string",
            "example": "Johnny T."
          },
          "firstName": {
            "type": "string",
            "example": "Johnny"
          },
          "lastName": {
            "type": "string",
            "example": "Thoeun"
          },
          "email": {
            "type": "string",
            "example": "admin@test.com"
          },
          "accountType": {
            "type": "string",
            "example": "admin"
          }
        },
        "required": ["username", "password", "email"]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "jtgamer"
          },
          "displayName": {
            "type": "string",
            "example": "Johnny T."
          },
          "firstName": {
            "type": "string",
            "example": "Johnny"
          },
          "lastName": {
            "type": "string",
            "example": "Thoeun"
          },
          "email": {
            "type": "string",
            "example": "admin@test.com"
          },
          "accountType": {
            "type": "string",
            "example": "admin"
          }
        }
      },
      "PokemonCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "pokemon-id"
          },
          "name": {
            "type": "string",
            "example": "Umbreon ex"
          },
          "set": {
            "type": "string",
            "example": "Scarlet & Violet: Prismatic Evolutions"
          },
          "number": {
            "type": "string",
            "example": "PRE"
          },
          "rarity": {
            "type": "string",
            "example": "Secret Illustration Rare"
          },
          "type": {
            "type": "string",
            "example": "Dark"
          },
          "condition": {
            "type": "string",
            "example": "Mint"
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "price": {
            "type": "integer",
            "example": 1450
          }
        },
        "required": ["name", "set", "number", "rarity", "type", "condition", "quantity", "price"]
      },
      "PokemonCardCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Umbreon ex"
          },
          "set": {
            "type": "string",
            "example": "Scarlet & Violet: Prismatic Evolutions"
          },
          "number": {
            "type": "string",
            "example": "PRE"
          },
          "rarity": {
            "type": "string",
            "example": "Secret Illustration Rare"
          },
          "type": {
            "type": "string",
            "example": "Dark"
          },
          "condition": {
            "type": "string",
            "example": "Mint"
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "price": {
            "type": "integer",
            "example": 1450
          }
        },
        "required": ["name", "set", "number", "rarity", "type", "condition", "quantity", "price"]
      },
      "PokemonCardUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Umbreon ex"
          },
          "set": {
            "type": "string",
            "example": "Scarlet & Violet: Prismatic Evolutions"
          },
          "number": {
            "type": "string",
            "example": "PRE"
          },
          "rarity": {
            "type": "string",
            "example": "Secret Illustration Rare"
          },
          "type": {
            "type": "string",
            "example": "Dark"
          },
          "condition": {
            "type": "string",
            "example": "Mint"
          },
          "quantity": {
            "type": "integer",
            "example": 1
          },
          "price": {
            "type": "integer",
            "example": 1450
          }
        }
      }
    }
  }
}